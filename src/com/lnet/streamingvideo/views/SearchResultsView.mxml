<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" top="138"
		 creationComplete="init()">
	<s:states>
		<s:State name="default"/>
		<s:State name="hasFocus"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.lnet.streamingvideo.events.ApplicationEvent;
			import com.lnet.streamingvideo.events.ApplicationEventBus;
			import com.lnet.streamingvideo.utils.KeyHandler;
			import com.lnet.streamingvideo.viewmodels.SearchViewModel;
			
			import mx.core.FlexGlobals;
			
			import nl.demonsters.debugger.MonsterDebugger;
			
			private var _searchViewModel:SearchViewModel;
			
			private function init():void {
				ApplicationEventBus.getInstance().addEventListener(ApplicationEvent.SET_FOCUS_TO_RESULTS, setFocusToResults);
			}

			private function setFocusToResults(event:ApplicationEvent):void {
				currentState = "hasFocus";
				FlexGlobals.topLevelApplication.currentState = "results";
				FlexGlobals.topLevelApplication.focusManager.setFocus(videoList);
				videoList.selectedIndex = 0;
			}
			
			private function keyEventHandler(event:KeyboardEvent):void {
				MonsterDebugger.trace("SearchResultsView.loadVideoContent","videoList.selectedItem::"+videoList.selectedItem.videoID);
				if(KeyHandler.keyPressed(event.keyCode) == "enter"){
					FlexGlobals.topLevelApplication.currentState = "videoPlaying"
				}
			}

			public function set searchViewModel(value:SearchViewModel):void {
				_searchViewModel = value;
			}
			
			[Bindable]
			public function get searchViewModel():SearchViewModel {
				return _searchViewModel;
			}
		]]>
	</fx:Script>
	<s:VGroup id="resultsContainer"
			  width="100%"
			  height="100%"
			  left="20">
		<s:Label id="resultsLabel"
				 styleName="searchResultLabel"
				 paddingLeft="20" paddingBottom="10"
				 visible="{searchViewModel.searchResultList.length > 0}"
				 text="{searchViewModel.searchTerm}"/>
		<s:List id="videoList"
				depth="0"
				dataProvider="{searchViewModel.searchResultList}"
				labelField="title"
				width="100%"
				height="100%"
				borderVisible="false"
				keyUp="keyEventHandler(event)"
				contentBackgroundAlpha="0"
				top="20"
				itemRenderer="com.lnet.streamingvideo.views.SearchResultsItemRenderer">
			<s:layout>
				<s:TileLayout
					requestedColumnCount="4"
					requestedRowCount="2"
					horizontalGap="4"
					verticalGap="20"/>
			</s:layout>
		</s:List>
	</s:VGroup>
</s:Group>
