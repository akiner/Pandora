<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%" initialize="init()">
	<s:states>
		<s:State name="hasFocus"/>
		<s:State name="lostFocus"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.demonsters.debugger.MonsterDebugger;
			import com.lnet.streamingvideo.events.ApplicationEvent;
			import com.lnet.streamingvideo.events.ApplicationEventBus;
			import com.lnet.streamingvideo.viewmodels.BrowseViewModel;
			
			import mx.core.FlexGlobals;
			
			private var _browseViewModel:BrowseViewModel;
			
			private function init():void {
				ApplicationEventBus.getInstance().addEventListener(ApplicationEvent.SET_INITIAL_CATEGORY_FOCUS, setInitialFocus, false, 0, true);
			}

			private function setInitialFocus(event:ApplicationEvent):void {
				var initialResultObj:Object = event.data;
				currentState = "hasFocus";
				FlexGlobals.topLevelApplication.focusManager.setFocus(categoryList);
				categoryList.selectedIndex = 0;
				browseViewModel.getCategoryResults(initialResultObj.name, initialResultObj.url);
			}

			private function selectionChangeHandler():void {
				if(categoryList.selectedItem.name != "All Categories") {
					browseViewModel.getCategoryResults(categoryList.selectedItem.name, categoryList.selectedItem.url);
				}
			}
			
			[Bindable]
			public function get browseViewModel():BrowseViewModel {
				return _browseViewModel;
			}

			public function set browseViewModel(value:BrowseViewModel):void {
				_browseViewModel = value;
			}

		]]>
	</fx:Script>
	<mx:Image source="@Embed('assets/YouTubeLogo.png')"
			  depth="2"
			  top="60"
			  horizontalCenter="0"/>
	<s:BorderContainer id="overlayContainer"
					   depth="1"
					   width="316"
					   height="100%"
					   visible.hasFocus="false"
					   backgroundAlpha.hasFocus="0"
					   backgroundAlpha.lostFocus="0.5"
					   backgroundColor="0x000000"/>
	<s:List id="categoryList"
			focusAlpha="0"
			depth="0"
			top="138"
			requireSelection="true"
			itemRenderer="com.lnet.streamingvideo.views.CategoryListItemRenderer"
			change="selectionChangeHandler()"
			labelField="name"
			styleName="categoryTitle"
			lineHeight="64"
			width="100%"
			height="100%"
			contentBackgroundAlpha="0"
			borderAlpha="0">
		<s:dataProvider>
			<s:XMLListCollection source="{browseViewModel.currentCategoryList.children()}" />
		</s:dataProvider>
	</s:List>
</s:BorderContainer>
