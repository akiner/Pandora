<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false">
	<s:states> 
		<s:State name="default"/> 
		<s:State name="selected"/>
	</s:states> 
	
	<fx:Script>
		<![CDATA[
			import com.adobe.utils.NumberFormatter;
			import com.demonsters.debugger.MonsterDebugger;
			
			import mx.core.BitmapAsset;
			import mx.formatters.NumberFormatter;
			[Embed(source="assets/smallVideoUH.png")]
			[Bindable]
			private var videoUH:Class;
			
			[Embed(source="assets/smallVideoHL.png")]
			[Bindable]
			private var videoHL:Class;
			
			[Embed(source="assets/star.png")]
			[Bindable]
			private var star:Class;
			
			[Embed(source="assets/halfStar.png")]
			[Bindable]
			private var halfStar:Class;
			
			[Embed(source="assets/noStar.png")]
			[Bindable]
			private var noStar:Class;
			
			private function calculateStars():void {
				MonsterDebugger.trace("SearchResultsItemRenderer::calculateStars","Rating::"+data.rating);
				try {
					var rating:Number = Number(data.rating);
					
//					MonsterDebugger.trace("SearchResultsItemRenderer::calculateStars","CALCULATING STARS FOR RATING::"+rating);
					if(rating >= 4.65) {
						star1.source = star2.source = star3.source = star4.source = star5.source = star;
					} else if(rating >= 4.25) {
						star1.source = star2.source = star3.source = star4.source = star;
						star5.source = halfStar;
					} else if(rating >= 3.65) {
						star1.source = star2.source = star3.source = star4.source = star;
						star5.source = noStar;
					} else if(rating >= 3.25) {
						star1.source = star2.source = star3.source = star;
						star4.source = halfStar;
						star5.source = noStar;
					} else if(rating >= 2.65) {
						star1.source = star2.source = star;
						star3.source = star;
						star4.source = star5.source = noStar;
					} else if(rating >= 2.25) {
						star1.source = star2.source = star;
						star3.source = halfStar;
						star4.source = star5.source = noStar;
					} else if(rating >= 1.65) {
						star1.source = star2.source = star;
						star3.source = star4.source = star5.source = noStar;
					} else if(rating >= 1.25) {
						star1.source = star;
						star2.source = halfStar;
						star3.source = star4.source = star5.source = noStar;
					} else if(rating >= 0.65) {
						star1.source = star;
						star2.source = star3.source = star4.source = star5.source = noStar;
					} else if(rating >= 0.25) {
						star1.source = halfStar;
						star2.source = star3.source = star4.source = star5.source = noStar;
					} else {
						star1.source = star2.source = star3.source = star4.source = star5.source = noStar;
					}
					updateDisplayList(width, height);
				} catch(e:Error) {
					MonsterDebugger.trace("SearchResultsItemRenderer::calculateStars","ERROR::Rating could not be calculated");
				}
			}
		]]>
	</fx:Script>
	
	<s:BorderContainer id="container"
					   backgroundAlpha.selected="1"
					   backgroundAlpha="1"
					   width="225" height="256"
					   backgroundImage="{videoUH}"
					   backgroundImage.selected="{videoHL}">
		<s:layout>
			<s:VerticalLayout paddingTop="25" horizontalAlign="center"/>
		</s:layout>
		<s:BorderContainer id="thumbnailContainer"
						   horizontalCenter="0"
						   cornerRadius="4"
						   width="124"
						   height="94"
						   backgroundAlpha.selected="1"
						   backgroundAlpha="0">
			<mx:Image id="thumbnail"
					  width="120" height="90"
					  source="{data.thumbnail}"
					  top="2"
					  left="2"/>
		</s:BorderContainer>
		<s:VGroup id="resultText"
				  horizontalCenter="left"
				  left="35"
				  gap="4">
			<s:Label text="{data.title}"
					 maxWidth="170"
					 paddingTop="10"
					 maxDisplayedLines="1"/>
			<s:Label text="By: {data.author}"
					 maxWidth="170" top="0" paddingTop="0"
					 maxDisplayedLines="1"/>
			<s:Label text="Views: {data.views}"
					 maxWidth="170" top="0" paddingTop="0"
					 maxDisplayedLines="1"/>
			<s:HGroup id="starContainer" creationComplete="calculateStars()">
				<s:Label text="Rating: "
						 top="0" paddingTop="0"/>
				<mx:Image id="star1"/>
				<mx:Image id="star2"/>
				<mx:Image id="star3"/>
				<mx:Image id="star4"/>
				<mx:Image id="star5"/>
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>
</s:ItemRenderer>
