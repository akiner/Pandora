<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="515" height="265" borderAlpha="1" top="67" left="7"
		 creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.demonsters.debugger.MonsterDebugger;
			import com.lnet.pandora.events.ApplicationEvent;
			import com.lnet.pandora.events.ApplicationEventBus;
			
			private var key:String;
			
			private function init():void {
				ApplicationEventBus.getInstance().addEventListener(ApplicationEvent.SET_FOCUS_TO_RATING, setInitialFocus);
				ApplicationEventBus.getInstance().addEventListener(ApplicationEvent.KEY_PRESS_IN_RATING, handleKeyPress);
			}

			private function setInitialFocus(event:ApplicationEvent):void {
				currentState = "thumbUpOn";
			}
			
			private function handleKeyPress(event:ApplicationEvent):void {
				key = event.data as String;
				switch(currentState){
					case "thumbUpOn":
						handleKeyPressInThumbUpView();
						break;
					case "thumbDownOn":
						handleKeyPressInThumbDownView();
						break;
					default:
						break;
				}
			}
			
			private function handleKeyPressInThumbUpView():void {
				switch(key){
					case "downArrow":
						currentState = "thumbDownOn";
						break;
					case "select":
						MonsterDebugger.trace("RatingView::handleKeyPressInThumbUpView","I LIKE THIS SONG!!!");
						currentState = "thumbUpSelected";
						break;
					default:
						MonsterDebugger.trace("RatingView::handleKeyPress","ERROR:: KEY NOT HANDLED");
						break;
				}
			}

			private function handleKeyPressInThumbDownView():void {
				switch(key){
					case "upArrow":
						currentState = "thumbUpOn";
						break;
					case "select":
						MonsterDebugger.trace("RatingView::handleKeyPressInThumbUpView","I DON'T LIKE THIS SONG!!!");
						currentState = "thumbDownSelected";
						break;
					default:
						MonsterDebugger.trace("RatingView::handleKeyPress","ERROR:: KEY NOT HANDLED");
						break;
				}
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="thumbUpOn"/>
		<s:State name="thumbUpSelected"/>
		<s:State name="thumbDownOn"/>
		<s:State name="thumbDownSelected"/>
	</s:states>
	<s:layout>
		<s:VerticalLayout paddingTop="37" horizontalAlign="center"/>
	</s:layout>
	<mx:Image source.thumbDownOn="@Embed(source='assets/thumbUp.png')"
			  source.thumbDownSelected="@Embed(source='assets/thumbUp.png')"
			  source.thumbUpOn="@Embed(source='assets/thumbUp_on.png')"
			  source.thumbUpSelected="@Embed(source='assets/thumbUp_check.png')"/>
	<mx:Image source="@Embed(source='assets/option_divider.png')"/>
	<s:Label text="I am tired of this song" styleName="optionsText" alpha=".2"/>
	<mx:Image source.thumbUpOn="@Embed(source='assets/thumbDown.png')"
			  source.thumbUpSelected="@Embed(source='assets/thumbDown.png')"
			  source.thumbDownOn="@Embed(source='assets/thumbDown_on.png')"
			  source.thumbDownSelected="@Embed(source='assets/thumbDown_check.png')"/>
</s:BorderContainer>
