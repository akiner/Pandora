<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="1280" height="720"
			   backgroundColor="0x000000"
			   creationComplete="init()" creationPolicy="all">
	<fx:Style source="SteamingVideoApp.css"/>
	
	<s:states>
		<s:State name="default"/>
		<s:State name="results"/>
		<s:State name="videoPlaying"/>
		<s:State name="search"/>
	</s:states>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.demonsters.debugger.MonsterDebugger;
			import com.lnet.streamingvideo.data.AllCategoriesLoader;
			import com.lnet.streamingvideo.data.DefaultCategoriesLoader;
			import com.lnet.streamingvideo.events.ApplicationEvent;
			import com.lnet.streamingvideo.events.ApplicationEventBus;
			import com.lnet.streamingvideo.services.VideoService;
			import com.lnet.streamingvideo.utils.FocusHandler;
			import com.lnet.streamingvideo.viewmodels.BrowseViewModel;
			import com.lnet.streamingvideo.viewmodels.PlayerViewModel;
			import com.lnet.streamingvideo.viewmodels.SearchViewModel;
			import com.lnet.streamingvideo.views.BrowseView;
			import com.lnet.streamingvideo.views.PlayerView;
			import com.lnet.streamingvideo.views.SearchResultsView;
			import com.lnet.streamingvideo.views.SearchView;
			
			private var searchView:SearchView;
			private var searchViewModel:SearchViewModel;
			private var searchResultsView:SearchResultsView;
			private var playerView:PlayerView;
			private var playerViewModel:PlayerViewModel;
			private var browseView:BrowseView;
			private var focusHandler:FocusHandler;
			private var videoService:VideoService;
			private var defaultCategoriesXML:DefaultCategoriesLoader;
			private var allCategoriesXML:AllCategoriesLoader;
			
			private function init():void {
				Security.allowDomain("www.youtube.com");
				focusHandler = new FocusHandler();
				videoService = new VideoService();
				defaultCategoriesXML = new DefaultCategoriesLoader();
				allCategoriesXML = new AllCategoriesLoader();
				playerViewModel = new PlayerViewModel();
				createSearchResultsView();
				createBrowseView();
				createSearchView();
				createPlayerView();
				initMonsterDebugger();
			}
			
			private function createSearchView():void {
				searchView = new SearchView();
				searchView.searchViewModel = new SearchViewModel();
				searchContainer.addElement(searchView);
				focusHandler.searchView = searchView;
			}
			
			private function createSearchResultsView():void {
				searchResultsView = new SearchResultsView();
				searchResultsView.searchViewModel = new SearchViewModel();
				resultlist.addElement(searchResultsView);
				focusHandler.searchResultsView = searchResultsView;
			}
			
			private function createPlayerView():void {
				playerView = new PlayerView();
				playerView.playerViewModel = playerViewModel;
				playerContainer.addElement(playerView);
				focusHandler.playerView = playerView;
			}
			
			private function createBrowseView():void {
				browseView = new BrowseView();
				browseView.browseViewModel = new BrowseViewModel();
				leftPane.addElement(browseView);
				focusHandler.browseView = browseView;
			}			

			private function initMonsterDebugger():void {
				MonsterDebugger.initialize(this);
			}
		]]>
	</fx:Script>
	<s:Group id="playerContainer"
			 depth="3"
			 visible.videoPlaying="true"
			 visible.default="false"
			 visible.search="false"
			 visible.results="false"
			 width="100%" height="100%"/>
	<s:BorderContainer id="backgroundContainer"
					   depth="0"
					   width="1280" height="720"
					   backgroundAlpha="1"
					   backgroundImage="@Embed(source='assets/Texture.png')">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>
		<s:BorderContainer id="leftPane"
						   width="317" height="720"
						   borderVisible="false"
						   backgroundAlpha="1"
						   backgroundImage="@Embed(source='assets/LeftDarker.png')"
						   backgroundImageFillMode="clip"/>
		<s:Group id="rightPane"
				 width="100%" height="100%">
			<s:Group id="searchContainer"
					 depth="2"
					 width="275"
					 height="40"
					 right="55"
					 top="60"/>
			<s:BorderContainer id="overlayContainer"
							   depth="1"
							   width="100%"
							   height="100%"
							   backgroundAlpha="0.7"
							   visible.default="true"
							   visible.results="false"
							   backgroundColor="0x000000"/>
			<s:Group depth="0" id="resultlist" height="100%" width="100%"/>
		</s:Group>
	</s:BorderContainer>
</s:Application>
