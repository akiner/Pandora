<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:views="com.lnet.pandora.views.*"
			   minWidth="1280" minHeight="720"
			   maxWidth="1280" maxHeight="720"
			   applicationComplete="init()"
			   width="1280" height="720"
			   backgroundColor="0x000000">
	<fx:Style source="Pandora.css"/>
	<s:states>
		<s:State name="default"/>
		<s:State name="createStation"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.demonsters.debugger.MonsterDebugger;
			import com.hurlant.crypto.Crypto;
			import com.hurlant.crypto.symmetric.BlowFishKey;
			import com.hurlant.crypto.symmetric.ECBMode;
			import com.hurlant.crypto.symmetric.ICipher;
			import com.hurlant.crypto.symmetric.IPad;
			import com.hurlant.crypto.symmetric.IVMode;
			import com.hurlant.crypto.symmetric.PKCS5;
			import com.hurlant.util.Hex;
			import com.lnet.pandora.Session;
			import com.lnet.pandora.command.XmlRpcCommandBase;
			import com.lnet.pandora.command.auth.PartnerLogin;
			import com.lnet.pandora.command.auth.UserLogin;
			import com.lnet.pandora.command.station.AddMusic;
			import com.lnet.pandora.command.station.GetGenreStations;
			import com.lnet.pandora.command.station.GetPlaylist;
			import com.lnet.pandora.command.station.GetStation;
			import com.lnet.pandora.command.test.CheckLicensing;
			import com.lnet.pandora.command.test.Echo;
			import com.lnet.pandora.command.user.GetStationList;
			import com.lnet.pandora.events.ApplicationEvent;
			import com.lnet.pandora.events.ApplicationEventBus;
			import com.lnet.pandora.response.auth.PartnerLoginResponse;
			import com.lnet.pandora.response.auth.UserLoginResponse;
			import com.lnet.pandora.response.station.GetGenreStationsResponse;
			import com.lnet.pandora.response.station.GetPlaylistResponse;
			import com.lnet.pandora.response.station.supportClasses.Category;
			import com.lnet.pandora.response.station.supportClasses.Station;
			import com.lnet.pandora.response.station.supportClasses.Track;
			import com.lnet.pandora.response.user.GetStationListResponse;
			import com.lnet.pandora.utils.FocusHandler;
			import com.lnet.pandora.viewmodels.SongListViewModel;
			
			import flash.net.URLRequest;
			
			import mx.events.FlexEvent;
			
			import org.osmf.utils.URL;
			
			private var request:URLRequest;
			private var loader:URLLoader;
			private var soundInstance:Sound;
			private var soundChannelInstance:SoundChannel;
			private var focusHandler:FocusHandler;
			private var songListViewModel:SongListViewModel;
			
			public function init(nServiceNum:Number=undefined, nServiceStatus:Number=undefined):void {
				initMonsterDebugger();
				initFocus();
				initViews();
				Session.instance.beginSession();
			}
			
			private function initMonsterDebugger():void {
				MonsterDebugger.initialize(this);
			}
			
			private function initFocus():void {
				focusHandler = new FocusHandler();
				focusHandler.createNewStationView = createNewStation;
			}
			
			private function initViews():void {
				songListViewModel = new SongListViewModel();
				songListView.songListViewModel = songListViewModel;
			}
			
			private function callEcho():void {
				var echo:Echo = new Echo();
				echo.message = "Hello, world!";
				request = new URLRequest( echo.url );
				request.method = URLRequestMethod.POST;
				request.contentType = "text/xml";
				request.data = String( echo );
				MonsterDebugger.trace("PandoraStandalone::callEcho","request.data::"+String( request.data ));
				
				loader = new URLLoader( );
				loader.addEventListener( Event.COMPLETE, onEchoComplete );
				loader.load( request );
			}
			
			private function onEchoComplete( e:Event ):void	{
				MonsterDebugger.trace("PandoraStandalone::onEchoComplete","onEchoComplete:" + e);
				MonsterDebugger.trace("PandoraStandalone::onEchoComplete","loader.data::"+loader.data);
			}
		]]>
	</fx:Script>
	
	<s:BorderContainer id="backgroundContainer"
					   depth="0"
					   width="1280" height="720"
					   backgroundAlpha="1"
					   backgroundImage="@Embed(source='assets/background.jpg')">
		<mx:Image source="@Embed(source='assets/logo.png')"
				  left="87" top="36"/>
		<views:SongListView id="songListView"
							width="1280" height="326"
							textAlign="right" top="197"/>
		<views:CreateNewStationView id="createNewStation"
									width="301" height="93"
									left="68" top="610"/>
	</s:BorderContainer>
</s:Application>